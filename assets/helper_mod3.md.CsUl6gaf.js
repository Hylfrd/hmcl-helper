import{a,b as r,_ as e}from"./chunks/10.DTpHyHrX.js";import{_ as o,c as s,o as d,ag as i}from"./chunks/framework.D1af8kPJ.js";const p="/assets/1.-XS-UqO7.png",l="/assets/4.COk4iw4y.png",c="/assets/3.CaHa4w-R.png",k=JSON.parse('{"title":"版本匹配问题","description":"","frontmatter":{"title":"版本匹配问题"},"headers":[],"relativePath":"helper/mod3.md","filePath":"helper/mod3.md","lastUpdated":1750480259000}'),n={name:"helper/mod3.md"};function m(h,t,b,_,f,g){return d(),s("div",null,t[0]||(t[0]=[i('<h1 id="模组版本匹配问题" tabindex="-1">模组版本匹配问题 <a class="header-anchor" href="#模组版本匹配问题" aria-label="Permalink to &quot;模组版本匹配问题&quot;">​</a></h1><p><strong>如果你不知道如何寻找匹配的版本，或在此篇中的任何步骤遇到非崩溃问题，请前往用户群询问！请不要在崩溃群询问任何有关模组版本匹配的问题</strong></p><table tabindex="0"><thead><tr><th>用户群</th><th>群号</th><th>用户群</th><th>群号</th></tr></thead><tbody><tr><td>HMCL 用户群 ①</td><td>633640264</td><td>HMCL 用户群 ②</td><td>203232161</td></tr><tr><td>HMCL 用户群 ③</td><td>201034984</td><td>HMCL 用户群 ④</td><td>533529045</td></tr><tr><td>HMCL 用户群 ⑤</td><td>744304553</td><td>HMCL 用户群 ⑥</td><td>282845310</td></tr><tr><td>HMCL 用户群 ⑦</td><td>482624681</td><td>HMCL 用户群 ⑧</td><td>991620626</td></tr><tr><td>HMCL 用户群 ⑨</td><td>657677715</td><td>HMCL 用户群 ⑩</td><td>775084843</td></tr></tbody></table><h2 id="什么是版本匹配问题" tabindex="-1">什么是版本匹配问题 <a class="header-anchor" href="#什么是版本匹配问题" aria-label="Permalink to &quot;什么是版本匹配问题&quot;">​</a></h2><p>部分模组需要前置模组运行的同时，对前置模组有严格的版本要求</p><p>例如Steam_Rails-1.6.7+forge-mc1.20.1则严格要求create模组的0.5.1.j版本才能正常运行</p><p>而当模组的版本不匹配则会导致运行问题</p><h2 id="如何解决版本匹配问题" tabindex="-1">如何解决版本匹配问题 <a class="header-anchor" href="#如何解决版本匹配问题" aria-label="Permalink to &quot;如何解决版本匹配问题&quot;">​</a></h2><p><strong>首要逻辑：附属版本匹配核心模组版本</strong></p><p>以下以create和railways版本作为模组版本匹配的示例：</p><br><p><img src="'+p+'" alt="示例"></p><br><p>从mcmod.cn或其他渠道，我们可以知道，railways(即模组Steam_Rails)需要create(即模组机械动力)作为前置</p><p>我们则可以确定，create为核心模组，我们需要调整附属模组railways的版本来使两者的版本进行匹配</p><p>确定了思路之后，我们则可以寻找正确的railways版本：</p><h3 id="方法1-在模组主页进行信息查找" tabindex="-1">方法1：在模组主页进行信息查找： <a class="header-anchor" href="#方法1-在模组主页进行信息查找" aria-label="Permalink to &quot;方法1：在模组主页进行信息查找：&quot;">​</a></h3><p>我们在mcmod.cn和modrinth.com查找railways的模组信息，均可以找到当前railways的版本匹配情况：</p><br><p><img src="'+l+'" alt="示例"><img src="'+c+'" alt="示例"></p><br><p>我们可以看到，最新的railways模组<strong>仅支持到create 0.5.1j版本</strong>，这意味着如果你想要游玩railways模组，你只能在create 0.5.1j的版本下游玩(截至2025年3月28日)</p><p>此时你有两个选择：</p><p>1：<strong>(不建议)</strong> 将create版本更改为create 0.5.1.j，并调整<strong>所有</strong>create模组的附属模组，让所有的模组匹配create 0.5.1j <br> 2：移除railways模组</p><h3 id="方法2-在模组本体内查找-技术向" tabindex="-1">方法2：在模组本体内查找（技术向） <a class="header-anchor" href="#方法2-在模组本体内查找-技术向" aria-label="Permalink to &quot;方法2：在模组本体内查找（技术向）&quot;">​</a></h3><p>在某些情况下，作者可能没有在模组介绍页声明需要的对应前置或匹配的模组版本</p><p>而在99.9%的情况下，模组的本体文件内都会声明需要的模组</p><p>（如果没有就说明这个作者瞎写模组）</p><p>以下提供可行的方法，查找模组需要的匹配模组，仍以railways模组作为举例：</p><h4 id="forge模组-以steam-rails-1-6-7-forge-mc1-20-1作为示例" tabindex="-1">forge模组:以Steam_Rails-1.6.7+forge-mc1.20.1作为示例 <a class="header-anchor" href="#forge模组-以steam-rails-1-6-7-forge-mc1-20-1作为示例" aria-label="Permalink to &quot;forge模组:以Steam_Rails-1.6.7+forge-mc1.20.1作为示例&quot;">​</a></h4><p>下载Steam_Rails-1.6.7+forge-mc1.20.1模组，使用<strong>压缩软件</strong>解压模组，你会得到一个文件夹</p><p>forge模组的声明保存在mods.toml文件内，打开META-INF文件夹，打开mods.toml文件，以记事本即可打开，此处使用VSC打开</p><br><p><img src="'+a+'" alt="示例"><img src="'+r+'" alt="示例"></p><br><p>我们在dependencies选项即可看到模组需要的前置以及对应版本</p><h4 id="fabric模组-以tweakeroo-fabric-1-20-4-0-19-3作为示例" tabindex="-1">fabric模组:以tweakeroo-fabric-1.20.4-0.19.3作为示例 <a class="header-anchor" href="#fabric模组-以tweakeroo-fabric-1-20-4-0-19-3作为示例" aria-label="Permalink to &quot;fabric模组:以tweakeroo-fabric-1.20.4-0.19.3作为示例&quot;">​</a></h4><p>下载tweakeroo-fabric-1.20.4-0.19.3模组，使用<strong>压缩软件</strong>解压模组，你会得到一个文件夹</p><p>打开文件夹，打开其中的fabric.mod.json文件(记事本即可打开)</p><p>找到depends项，即可找到需要的前置以及对应的版本</p><br><p><img src="'+e+'" alt="示例"></p><br>',43)]))}const q=o(n,[["render",m]]);export{k as __pageData,q as default};
